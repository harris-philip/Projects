/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package skillcalculator;

import javax.swing.SwingConstants;

/**
 *
 * @author phili
 */
public class SkillCalculator extends javax.swing.JFrame {

    /**
     * Creates new form SkillCalculatorGUI
     */
    public SkillCalculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pulseBaseBtn = new javax.swing.JButton();
        stkyBaseBtn = new javax.swing.JButton();
        ballisticBaseBtn = new javax.swing.JButton();
        firstAidBaseBtn = new javax.swing.JButton();
        turretBaseBtn = new javax.swing.JButton();
        smartCoverBaseBtn = new javax.swing.JButton();
        supporBasetBtn = new javax.swing.JButton();
        seekerBaseBtn = new javax.swing.JButton();
        mobileBaseBtn = new javax.swing.JButton();
        skillPower = new javax.swing.JLabel();
        recoveryBtn = new javax.swing.JButton();
        tacticalBtn = new javax.swing.JButton();
        survivorBtn = new javax.swing.JButton();
        intSkill = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        basePower = new javax.swing.JLabel();
        reconBtn = new javax.swing.JButton();
        bfbBtn = new javax.swing.JButton();
        reactiveBtn = new javax.swing.JButton();
        defibBtn = new javax.swing.JButton();
        activeBtn = new javax.swing.JButton();
        trapperBtn = new javax.swing.JButton();
        lifeBtn = new javax.swing.JButton();
        airburstBtn = new javax.swing.JButton();
        extentionBtn = new javax.swing.JButton();
        scramblerBtn = new javax.swing.JButton();
        flashbangBtn = new javax.swing.JButton();
        assaultBtn = new javax.swing.JButton();
        overdoseBtn = new javax.swing.JButton();
        dragonbreathBtn = new javax.swing.JButton();
        rechargerBtn = new javax.swing.JButton();
        immunizerBtn = new javax.swing.JButton();
        gasChargeBtn = new javax.swing.JButton();
        blastShieldBtn = new javax.swing.JButton();
        tacticalScanBtn = new javax.swing.JButton();
        proxFuseBtn = new javax.swing.JButton();
        kinBreakBtn = new javax.swing.JButton();
        boosterBtn = new javax.swing.JButton();
        zapperBtn = new javax.swing.JButton();
        concealBtn = new javax.swing.JButton();
        ammoCacheBtn = new javax.swing.JButton();
        clusterBtn = new javax.swing.JButton();
        counterBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pulseBaseBtn.setText("Pulse Base");
        pulseBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pulseBaseBtnActionPerformed(evt);
            }
        });

        stkyBaseBtn.setText("Sticky Bomb Base");
        stkyBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stkyBaseBtnActionPerformed(evt);
            }
        });

        ballisticBaseBtn.setText("Ballistic Shield Base");
        ballisticBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ballisticBaseBtnActionPerformed(evt);
            }
        });

        firstAidBaseBtn.setText("First Aid Base");
        firstAidBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstAidBaseBtnActionPerformed(evt);
            }
        });

        turretBaseBtn.setText("Turret Base");
        turretBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turretBaseBtnActionPerformed(evt);
            }
        });

        smartCoverBaseBtn.setText("Smart Cover Base");
        smartCoverBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smartCoverBaseBtnActionPerformed(evt);
            }
        });

        supporBasetBtn.setText("Support Station Base");
        supporBasetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supporBasetBtnActionPerformed(evt);
            }
        });

        seekerBaseBtn.setText("Seeker Mine Base");
        seekerBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seekerBaseBtnActionPerformed(evt);
            }
        });

        mobileBaseBtn.setText("Mobile Cover Base");
        mobileBaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileBaseBtnActionPerformed(evt);
            }
        });

        skillPower.setText("Click on a button for Modified Skill");

        recoveryBtn.setText("Recovery Link");
        recoveryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recoveryBtnActionPerformed(evt);
            }
        });

        tacticalBtn.setText("Tactical Link");
        tacticalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tacticalBtnActionPerformed(evt);
            }
        });

        survivorBtn.setText("Survivor Link");
        survivorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                survivorBtnActionPerformed(evt);
            }
        });

        intSkill.setText("15000");
        intSkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intSkillActionPerformed(evt);
            }
        });

        jLabel1.setText("Skill Power:");

        basePower.setText("Click on a button for Base Skill");

        reconBtn.setText("Recon Pack(Pulse)");
        reconBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reconBtnActionPerformed(evt);
            }
        });

        bfbBtn.setText("BFB(StickyBomb)");
        bfbBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bfbBtnActionPerformed(evt);
            }
        });

        reactiveBtn.setText("Reactive Targeting(BallisticShield)\n");
        reactiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reactiveBtnActionPerformed(evt);
            }
        });

        defibBtn.setText("Defibrillator(FirstAid)");
        defibBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defibBtnActionPerformed(evt);
            }
        });

        activeBtn.setText("Active Sensor(Turret)");
        activeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeBtnActionPerformed(evt);
            }
        });

        trapperBtn.setText("Trapper(SmartCover)");
        trapperBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trapperBtnActionPerformed(evt);
            }
        });

        lifeBtn.setText("Life Support(SupportStation)");
        lifeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lifeBtnActionPerformed(evt);
            }
        });

        airburstBtn.setText("Airburst(SeekerMine)");
        airburstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airburstBtnActionPerformed(evt);
            }
        });

        extentionBtn.setText("Extention(MobileCover)");
        extentionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extentionBtnActionPerformed(evt);
            }
        });

        scramblerBtn.setText("Scrambler(Pulse)");
        scramblerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scramblerBtnActionPerformed(evt);
            }
        });

        flashbangBtn.setText("Flashbang(StickyBomb)");
        flashbangBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flashbangBtnActionPerformed(evt);
            }
        });

        assaultBtn.setText("Assault Shield(BallisticShield)");
        assaultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assaultBtnActionPerformed(evt);
            }
        });

        overdoseBtn.setText("Overdose(FirstAid)");
        overdoseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overdoseBtnActionPerformed(evt);
            }
        });

        dragonbreathBtn.setText("Dragonbreath(Turret)");
        dragonbreathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dragonbreathBtnActionPerformed(evt);
            }
        });

        rechargerBtn.setText("Recharger(SmartCover)");
        rechargerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechargerBtnActionPerformed(evt);
            }
        });

        immunizerBtn.setText("Immunizer(SupportStation)");
        immunizerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                immunizerBtnActionPerformed(evt);
            }
        });

        gasChargeBtn.setText("Gas Charge(SeekerMine)");
        gasChargeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gasChargeBtnActionPerformed(evt);
            }
        });

        blastShieldBtn.setText("Blast Shield(MobileCover)");
        blastShieldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blastShieldBtnActionPerformed(evt);
            }
        });

        tacticalScanBtn.setText("Tactical Scanner(Pulse)");
        tacticalScanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tacticalScanBtnActionPerformed(evt);
            }
        });

        proxFuseBtn.setText("Proximity Fuse(StickyBomb)");
        proxFuseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxFuseBtnActionPerformed(evt);
            }
        });

        kinBreakBtn.setText("Kinetic Breaker(BallisticShield)");
        kinBreakBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kinBreakBtnActionPerformed(evt);
            }
        });

        boosterBtn.setText("Booster Shot(FirstAid)");
        boosterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boosterBtnActionPerformed(evt);
            }
        });

        zapperBtn.setText("Zapper(Turret)");
        zapperBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapperBtnActionPerformed(evt);
            }
        });

        concealBtn.setText("Concealment(SmartCover)");
        concealBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concealBtnActionPerformed(evt);
            }
        });

        ammoCacheBtn.setText("Ammo Cache(SupportStation)");
        ammoCacheBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ammoCacheBtnActionPerformed(evt);
            }
        });

        clusterBtn.setText("Cluster(SeekerMine)");
        clusterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusterBtnActionPerformed(evt);
            }
        });

        counterBtn.setText("Countermeasures(MobileCover)");
        counterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                counterBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstAidBaseBtn)
                            .addComponent(pulseBaseBtn)
                            .addComponent(supporBasetBtn)
                            .addComponent(reconBtn)
                            .addComponent(defibBtn)
                            .addComponent(lifeBtn)
                            .addComponent(scramblerBtn)
                            .addComponent(overdoseBtn)
                            .addComponent(immunizerBtn)
                            .addComponent(tacticalScanBtn)
                            .addComponent(ammoCacheBtn)
                            .addComponent(recoveryBtn))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(turretBaseBtn)
                                .addGap(116, 116, 116)
                                .addComponent(smartCoverBaseBtn))
                            .addComponent(seekerBaseBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bfbBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(activeBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(airburstBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flashbangBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dragonbreathBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gasChargeBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(proxFuseBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zapperBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clusterBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(stkyBaseBtn)
                                    .addComponent(tacticalBtn))
                                .addGap(90, 90, 90)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(survivorBtn)
                                    .addComponent(mobileBaseBtn)
                                    .addComponent(reactiveBtn)
                                    .addComponent(trapperBtn)
                                    .addComponent(extentionBtn)
                                    .addComponent(assaultBtn)
                                    .addComponent(rechargerBtn)
                                    .addComponent(blastShieldBtn)
                                    .addComponent(kinBreakBtn)
                                    .addComponent(ballisticBaseBtn)
                                    .addComponent(concealBtn)
                                    .addComponent(counterBtn)))))
                    .addComponent(boosterBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(basePower, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(intSkill, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(skillPower, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(intSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(basePower, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(skillPower, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseBaseBtn)
                    .addComponent(stkyBaseBtn)
                    .addComponent(ballisticBaseBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstAidBaseBtn)
                    .addComponent(turretBaseBtn)
                    .addComponent(smartCoverBaseBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supporBasetBtn)
                    .addComponent(seekerBaseBtn)
                    .addComponent(mobileBaseBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reconBtn)
                    .addComponent(bfbBtn)
                    .addComponent(reactiveBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defibBtn)
                    .addComponent(activeBtn)
                    .addComponent(trapperBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lifeBtn)
                    .addComponent(airburstBtn)
                    .addComponent(extentionBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scramblerBtn)
                    .addComponent(flashbangBtn)
                    .addComponent(assaultBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(overdoseBtn)
                    .addComponent(dragonbreathBtn)
                    .addComponent(rechargerBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(immunizerBtn)
                    .addComponent(gasChargeBtn)
                    .addComponent(blastShieldBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tacticalScanBtn)
                    .addComponent(proxFuseBtn)
                    .addComponent(kinBreakBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boosterBtn)
                    .addComponent(zapperBtn)
                    .addComponent(concealBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ammoCacheBtn)
                    .addComponent(clusterBtn)
                    .addComponent(counterBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recoveryBtn)
                    .addComponent(tacticalBtn)
                    .addComponent(survivorBtn))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Base Skill Buttons
    private void stkyBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stkyBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 27714;
        double explosionRad = 4.0;
        double deployRange = 50.0;
        double baseCool = 76.20;
        
        int newexplosionDmg = 27714 + skill;
        double newCool = 76.2;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_stkyBaseBtnActionPerformed

    private void firstAidBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstAidBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseSelfHeal = 13437;
        int baseAllyHeal = 13437;
        double range = 3.0;
        double deployRange = 40.0;
        double baseCool = 56.90;
        
        int newSelfHeal = 12093;
        int newAllyHeal = 12093;
        double newCool = 56.9;
        
        basePower.setText("<html>" + "Self Heal: " + baseSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ baseAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Self Heal: " + newSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ newAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_firstAidBaseBtnActionPerformed

    private void recoveryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recoveryBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double instantHeal = 50.0;
        double healOverTime = 100.0;
        double duration = 12.0;
        double range = 50.0;
        int baseCool = 867;
        
        int newCool = 867;
        
        basePower.setText("<html>" + "InstantHeal: " + instantHeal + "<br>" 
                + "Heal Over Time: " + healOverTime + "%" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Cooldown: " + baseCool + "</html>");
        
        
        
        skillPower.setText("<html>" + "InstantHeal: " + instantHeal + "<br>" 
                + "Heal Over Time: " + healOverTime + "%" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Cooldown: " + newCool + "</html>");
    }//GEN-LAST:event_recoveryBtnActionPerformed

    private void pulseBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pulseBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 60.0;
        double duration = 20.0;
        double baseCriticalChance = 7.70;
        double baseCriticalDmg = 7.70;
        double baseCool = 56.40;
        
        double newCriticalChance = 7.70;
        double newCriticalDmg = 7.70;
        double newCool = 56.4;
        
        basePower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + baseCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + baseCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + newCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + newCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_pulseBaseBtnActionPerformed

    private void intSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intSkillActionPerformed
        //TODO logic here
    }//GEN-LAST:event_intSkillActionPerformed

    private void ballisticBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ballisticBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 100779;
        double dmgIncrease = 10.0;
        double dmgResistance = 10.0;
        double threat = 200.0;
        double baseCool = 37.60;
        
        int newHealth = 100779;
        double newCool = 37.60;
        
        basePower.setText("<html>" + "Health: " + baseHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");

        skillPower.setText("<html>" + "Health: " + newHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_ballisticBaseBtnActionPerformed

    private void turretBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turretBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseDmg = 308;
        double range = 35.0;
        double lifetime = 45.0;
        int baseHealth = 40312;
        double baseCool = 56.40;
        
        int newDmg = 308;
        int newHealth = 40312;
        double newCool = 56.40;
        
        basePower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_turretBaseBtnActionPerformed

    private void smartCoverBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smartCoverBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double basedmgResistance = 9.34;
        double baseWpnStability = 9.34;
        double baseWpnAccuracy = 9.34;
        double effectRange = 8.0;
        double lifetime = 30.0;
        double baseCool = 41.70;
        
        double newdmgResistance = 9.34;
        double newWpnStability = 9.34;
        double newWpnAccuracy = 9.34;
        double newCool = 41.70;
        
        basePower.setText("<html>" + "Damage Resistance: " + basedmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + baseWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + baseWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage Resistance: " + newdmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + newWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + newWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_smartCoverBaseBtnActionPerformed

    private void supporBasetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supporBasetBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 8.0;
        int baseHealRate = 672;
        double reviveTime = 5.0;
        double baseLifetime = 25.30;
        int baseHealth = 10750;
        double baseCool = 47.00;
        
        int newHealRate = 672;
        double newLifetime = 25.30;
        int newHealth = 10750;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + baseHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + baseLifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + newHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + newLifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_supporBasetBtnActionPerformed

    private void seekerBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seekerBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 16125;
        double explosionRad = 6.0;
        double detectionRange = 30.0;
        double lifetime = 45.0;
        int baseHealth = 4031;
        double baseCool = 47.00;
        
        int newexplosionDmg = 16125;
        int newHealth = 4031;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_seekerBaseBtnActionPerformed

    private void mobileBaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileBaseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 107498;
        double wpnResistance = 20.0;
        double blastResistance = 25.0;
        double baseCool = 37.60;
        int baseBlastShieldDmg = 0;
        
        int newHealth = 107498;
        double newCool = 37.60;
        int newBlastShieldDmg = 0;
        
        basePower.setText("<html>" + "Health: " + baseHealth + " HP" + "<br>" 
                + "Weapon Resistance: " + wpnResistance + "%" + "<br>" 
                + "Blast Resistance: " + blastResistance + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" +  "<br>" 
                + "Blast Shield Damage: " + baseBlastShieldDmg + " HP" + "</html>");
        
        skillPower.setText("<html>" + "Health: " + newHealth + " HP" + "<br>" 
                + "Weapon Resistance: " + wpnResistance + "%" + "<br>" 
                + "Blast Resistance: " + blastResistance + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" +  "<br>" 
                + "Blast Shield Damage: " + newBlastShieldDmg + " HP" + "</html>");
    }//GEN-LAST:event_mobileBaseBtnActionPerformed
    
    private void tacticalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tacticalBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double dmgBuff = 30.0;
        double wpnRPMBuff = 50.0;
        double reloadSpdBuff = 50.0;
        double duration = 13.0;
        double range = 50.0;
        int baseCool = 867;
        
        int newCool = 867;
        
        basePower.setText("<html>" + "Damage Buff: " + dmgBuff + "%" + "<br>" 
                + "Weapon RPM Buff: " + wpnRPMBuff + "%" + "<br>" 
                + "Reload Speed Buff: " + reloadSpdBuff + "%" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage Buff: " + dmgBuff + "%" + "<br>" 
                + "Weapon RPM Buff: " + wpnRPMBuff + "%" + "<br>" 
                + "Reload Speed Buff: " + reloadSpdBuff + "%" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_tacticalBtnActionPerformed

    private void survivorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_survivorBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double dmgResistance = 50.0;
        double movementSpd = 30.0;
        double duration = 13.0;
        double range = 50.0;
        int baseCool = 867;
        
        int newCool = 867;
        
        basePower.setText("<html>" + "Damage Resistance: " + dmgResistance + "% " + "<br>" 
                + "Movement Speed: " + movementSpd + "%" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage Resistance: " + dmgResistance + "% " + "<br>" 
                + "Movement Speed: " + movementSpd + "%" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_survivorBtnActionPerformed
    
    
    
//First Skill Mod Buttons
    private void reconBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reconBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 80.0;
        double duration = 20.0;
        double baseCriticalChance = 7.70;
        double baseCriticalDmg = 7.70;
        double baseCool = 42.30;
        
        double newCriticalChance = 7.70;
        double newCriticalDmg = 7.70;
        double newCool = 42.30;
        
        basePower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + baseCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + baseCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + newCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + newCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_reconBtnActionPerformed

    private void bfbBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bfbBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 37792;
        double explosionRad = 4.50;
        double deployRange = 50.0;
        double baseCool = 56.40;
        
        int newexplosionDmg = 37792;
        double newCool = 56.40;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_bfbBtnActionPerformed

    private void reactiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reactiveBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 151169;
        double dmgIncrease = 5.0;
        double dmgResistance = 10.0;
        double threat = 200.0;
        double baseCool = 37.60;
        
        int newHealth = 100779;
        double newCool = 37.60;
        
        basePower.setText("<html>" + "Health: " + baseHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");

        skillPower.setText("<html>" + "Health: " + newHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_reactiveBtnActionPerformed

    private void defibBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defibBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseSelfHeal = 10078;
        int baseAllyHeal = 22171;
        double range = 3.0;
        double deployRange = 40.0;
        double baseCool = 42.70;
        
        int newSelfHeal = 12093;
        int newAllyHeal = 12093;
        double newCool = 56.9;
        
        basePower.setText("<html>" + "Self Heal: " + baseSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ baseAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Self Heal: " + newSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ newAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_defibBtnActionPerformed

    private void activeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseDmg = 377;
        double range = 35.0;
        double lifetime = 45.0;
        int baseHealth = 40312;
        double baseCool = 56.40;
        
        int newDmg = 308;
        int newHealth = 40312;
        double newCool = 56.40;
        
        basePower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_activeBtnActionPerformed

    private void trapperBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trapperBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double basedmgResistance = 6.67;
        double baseWpnStability = 6.67;
        double baseWpnAccuracy = 6.67;
        double effectRange = 8.0;
        double lifetime = 30.0;
        double baseCool = 41.70;
        
        double newdmgResistance = 9.34;
        double newWpnStability = 9.34;
        double newWpnAccuracy = 9.34;
        double newCool = 41.70;
        
        basePower.setText("<html>" + "Damage Resistance: " + basedmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + baseWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + baseWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage Resistance: " + newdmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + newWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + newWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_trapperBtnActionPerformed

    private void lifeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lifeBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 8.0;
        int baseHealRate = 806;
        double reviveTime = 3.0;
        double baseLifetime = 25.30;
        int baseHealth = 10750;
        double baseCool = 47.00;
        
        int newHealRate = 672;
        double newLifetime = 25.30;
        int newHealth = 10750;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + baseHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + baseLifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + newHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + newLifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_lifeBtnActionPerformed

    private void airburstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airburstBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 5375;
        double explosionRad = 5.0;
        double detectionRange = 30.0;
        double lifetime = 45.0;
        int baseHealth = 4031;
        double baseCool = 47.00;
        
        int newexplosionDmg = 16125;
        int newHealth = 4031;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_airburstBtnActionPerformed

    private void extentionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extentionBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 214995;
        double wpnResistance = 20.0;
        double blastResistance = 25.0;
        double baseCool = 56.40;
        int baseBlastShieldDmg = 0;
        
        int newHealth = 107498;
        double newCool = 37.60;
        int newBlastShieldDmg = 0;
        
        basePower.setText("<html>" + "Health: " + baseHealth + " HP" + "<br>" 
                + "Weapon Resistance: " + wpnResistance + "%" + "<br>" 
                + "Blast Resistance: " + blastResistance + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" +  "<br>" 
                + "Blast Shield Damage: " + baseBlastShieldDmg + " HP" + "</html>");
        
        skillPower.setText("<html>" + "Health: " + newHealth + " HP" + "<br>" 
                + "Weapon Resistance: " + wpnResistance + "%" + "<br>" 
                + "Blast Resistance: " + blastResistance + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" +  "<br>" 
                + "Blast Shield Damage: " + newBlastShieldDmg + " HP" + "</html>");
    }//GEN-LAST:event_extentionBtnActionPerformed

    
//Second Skill Mod Buttons   
    private void scramblerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scramblerBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 60.0;
        double duration = 20.0;
        double baseCriticalChance = 7.70;
        double baseCriticalDmg = 7.70;
        double baseCool = 56.40;
        
        double newCriticalChance = 7.70;
        double newCriticalDmg = 7.70;
        double newCool = 56.4;
        
        basePower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + baseCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + baseCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + newCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + newCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_scramblerBtnActionPerformed

    private void flashbangBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flashbangBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 2771;
        double explosionRad = 6.0;
        double deployRange = 50.0;
        double baseCool = 47.0;
        
        int newexplosionDmg = 37792;
        double newCool = 56.40;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_flashbangBtnActionPerformed

    private void assaultBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assaultBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 75571;
        double dmgIncrease = 20.0;
        double dmgResistance = 10.0;
        double threat = 200.0;
        double baseCool = 37.60;
        
        int newHealth = 100779;
        double newCool = 37.60;
        
        basePower.setText("<html>" + "Health: " + baseHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");

        skillPower.setText("<html>" + "Health: " + newHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_assaultBtnActionPerformed

    private void overdoseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overdoseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseSelfHeal = 18140;
        int baseAllyHeal = 10078;
        double range = 2.0;
        double deployRange = 40.0;
        double baseCool = 62.60;
        
        int newSelfHeal = 12093;
        int newAllyHeal = 12093;
        double newCool = 56.9;
        
        basePower.setText("<html>" + "Self Heal: " + baseSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ baseAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Self Heal: " + newSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ newAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_overdoseBtnActionPerformed

    private void dragonbreathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dragonbreathBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseDmg = 616;
        double range = 12.0;
        double lifetime = 45.0;
        int baseHealth = 40312;
        double baseCool = 70.50;
        
        int newDmg = 308;
        int newHealth = 40312;
        double newCool = 56.40;
        
        basePower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_dragonbreathBtnActionPerformed

    private void rechargerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechargerBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double basedmgResistance = 9.34;
        double baseWpnStability = 9.34;
        double baseWpnAccuracy = 9.34;
        double effectRange = 8.0;
        double lifetime = 20.0;
        double baseCool = 41.70;
        
        double newdmgResistance = 9.34;
        double newWpnStability = 9.34;
        double newWpnAccuracy = 9.34;
        double newCool = 41.70;
        
        basePower.setText("<html>" + "Damage Resistance: " + basedmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + baseWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + baseWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage Resistance: " + newdmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + newWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + newWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_rechargerBtnActionPerformed

    private void immunizerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_immunizerBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 8.0;
        int baseHealRate = 672;
        double reviveTime = 5.0;
        double baseLifetime = 18.40;
        int baseHealth = 10750;
        double baseCool = 47.00;
        
        int newHealRate = 672;
        double newLifetime = 18.40;
        int newHealth = 10750;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + baseHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + baseLifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + newHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + newLifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_immunizerBtnActionPerformed

    private void gasChargeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gasChargeBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 0;
        double explosionRad = 5.0;
        double detectionRange = 30.0;
        double lifetime = 45.0;
        int baseHealth = 4031;
        double baseCool = 47.00;
        
        int newexplosionDmg = 0;
        int newHealth = 4031;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_gasChargeBtnActionPerformed

    private void blastShieldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blastShieldBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 107498;
        double wpnResistance = 18.0;
        double blastResistance = 35.0;
        double baseCool = 37.60;
        int baseBlastShieldDmg = 13437;
        
        int newHealth = 107498;
        double newCool = 37.60;
        int newBlastShieldDmg = 13437;
        
        basePower.setText("<html>" + "Health: 107,498 HP" + "<br>" 
                + "Weapon Resistance: 18.0%" + "<br>" 
                + "Blast Resistance: 35.0%" + "<br>" 
                + "Cooldown: 37.60 s" + "</html>");
        
        skillPower.setText("");
    }//GEN-LAST:event_blastShieldBtnActionPerformed


//Third Skill Mod Buttons
    private void tacticalScanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tacticalScanBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 60.0;
        double duration = 20.0;
        double baseCriticalChance = 7.70;
        double baseCriticalDmg = 10.20;
        double baseCool = 56.40;

        double newCriticalChance = 7.70;
        double newCriticalDmg = 7.70;
        double newCool = 56.4;
        
        basePower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + baseCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + baseCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Range: " + range + " m" + "<br>" 
                + "Duration: " + duration + " s" + "<br>" 
                + "Critical Hit Chance: " + newCriticalChance + "%" + "<br>" 
                + "Critical Hit Damage: " + newCriticalDmg + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_tacticalScanBtnActionPerformed

    private void proxFuseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxFuseBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 27714;
        double explosionRad = 6.25;
        double deployRange = 50.0;
        double baseCool = 76.20;
        
        int newexplosionDmg = 37792;
        double newCool = 56.40;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Deployment range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_proxFuseBtnActionPerformed

    private void kinBreakBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kinBreakBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 100779;
        double dmgIncrease = 10.0;
        double dmgResistance = 10.0;
        double threat = 200.0;
        double baseCool = 37.60;
        
        int newHealth = 100779;
        double newCool = 37.60;
        
        basePower.setText("<html>" + "Health: " + baseHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");

        skillPower.setText("<html>" + "Health: " + newHealth + " HP " + "<br>" 
                + "Damage Increase: " + dmgIncrease + "%" + "<br>" 
                + "Damage Resistance: " + dmgResistance + "%" + "<br>" 
                + "Threat Increase: " + threat + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_kinBreakBtnActionPerformed

    private void boosterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boosterBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseSelfHeal = 12093;
        int baseAllyHeal = 12093;
        double range = 3.0;
        double deployRange = 40.0;
        double baseCool = 56.90;
        
        int newSelfHeal = 12093;
        int newAllyHeal = 12093;
        double newCool = 56.9;
        
        basePower.setText("<html>" + "Self Heal: " + baseSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ baseAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Self Heal: " + newSelfHeal + " HP" + "<br>" 
                + "Ally Heal: "+ newAllyHeal + " HP" + "<br>" 
                + "Range: " + range +  " m" + "<br>" 
                + "Deploy range: " + deployRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_boosterBtnActionPerformed

    private void zapperBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapperBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseDmg = 34;
        double range = 16.0;
        double lifetime = 25.0;
        int baseHealth = 13437;
        double baseCool = 56.40;
        
        int newDmg = 308;
        int newHealth = 40312;
        double newCool = 56.40;
        
        basePower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage: " + baseDmg + " HP" + "<br>" 
                + "Range: " + range + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_zapperBtnActionPerformed

    private void concealBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concealBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double basedmgResistance = 9.34;
        double baseWpnStability = 9.34;
        double baseWpnAccuracy = 9.34;
        double effectRange = 6.0;
        double lifetime = 30.0;
        double baseCool = 41.70;
        
        double newdmgResistance = 9.34;
        double newWpnStability = 9.34;
        double newWpnAccuracy = 9.34;
        double newCool = 41.70;
        
        basePower.setText("<html>" + "Damage Resistance: " + basedmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + baseWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + baseWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Damage Resistance: " + newdmgResistance + "%" + "<br>" 
                + "Weapon Stability: " + newWpnStability + "%" + "<br>" 
                + "Weapon Accuracy: " + newWpnAccuracy + "%" + "<br>" 
                + "Effect range: " + effectRange + " m" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_concealBtnActionPerformed

    private void ammoCacheBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ammoCacheBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        double range = 8.0;
        int baseHealRate = 672;
        double reviveTime = 5.0;
        double baseLifetime = 25.30;
        int baseHealth = 10750;
        double baseCool = 47.00;
        
        int newHealRate = 672;
        double newLifetime = 25.30;
        int newHealth = 10750;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + baseHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + baseLifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "range: " + range + " m" + "<br>" 
                + "Healing Rate: " + newHealRate + " HP/s" + "<br>" 
                + "Revive Time: " + reviveTime + " s" + "<br>" 
                + "Lifetime: " + newLifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_ammoCacheBtnActionPerformed

    private void clusterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clusterBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseexplosionDmg = 6719;
        double explosionRad = 3.0;
        double detectionRange = 30.0;
        double lifetime = 45.0;
        int baseHealth = 1344;
        double baseCool = 47.00;
        
        int newexplosionDmg = 16125;
        int newHealth = 4031;
        double newCool = 47.00;
        
        basePower.setText("<html>" + "Explosion Damage: " + baseexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + baseHealth + " HP" + "<br>" 
                + "Cooldown: " + baseCool + " s" + "</html>");
        
        skillPower.setText("<html>" + "Explosion Damage: " + newexplosionDmg + " HP" + "<br>" 
                + "Explosion Radius: " + explosionRad + " m" + "<br>" 
                + "Detection Range: + " + detectionRange + " m" + "<br>" 
                + "Lifetime: " + lifetime + " s" + "<br>" 
                + "Health: " + newHealth + " HP" + "<br>" 
                + "Cooldown: " + newCool + " s" + "</html>");
    }//GEN-LAST:event_clusterBtnActionPerformed

    private void counterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_counterBtnActionPerformed
        int skill = Integer.parseInt(intSkill.getText());
        
        int baseHealth = 925290;
        double wpnResistance = 20.0;
        double blastResistance = 25.0;
        double baseCool = 37.60;
        int baseBlastShieldDmg = 0;
        
        int newHealth = 107498;
        double newCool = 37.60;
        int newBlastShieldDmg = 0;
        
        basePower.setText("<html>" + "Health: " + baseHealth + " HP" + "<br>" 
                + "Weapon Resistance: " + wpnResistance + "%" + "<br>" 
                + "Blast Resistance: " + blastResistance + "%" + "<br>" 
                + "Cooldown: " + baseCool + " s" +  "<br>" 
                + "Blast Shield Damage: " + baseBlastShieldDmg + " HP" + "</html>");
        
        skillPower.setText("<html>" + "Health: " + newHealth + " HP" + "<br>" 
                + "Weapon Resistance: " + wpnResistance + "%" + "<br>" 
                + "Blast Resistance: " + blastResistance + "%" + "<br>" 
                + "Cooldown: " + newCool + " s" +  "<br>" 
                + "Blast Shield Damage: " + newBlastShieldDmg + " HP" + "</html>");
    }//GEN-LAST:event_counterBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SkillCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SkillCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SkillCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SkillCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SkillCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activeBtn;
    private javax.swing.JButton airburstBtn;
    private javax.swing.JButton ammoCacheBtn;
    private javax.swing.JButton assaultBtn;
    private javax.swing.JButton ballisticBaseBtn;
    private javax.swing.JLabel basePower;
    private javax.swing.JButton bfbBtn;
    private javax.swing.JButton blastShieldBtn;
    private javax.swing.JButton boosterBtn;
    private javax.swing.JButton clusterBtn;
    private javax.swing.JButton concealBtn;
    private javax.swing.JButton counterBtn;
    private javax.swing.JButton defibBtn;
    private javax.swing.JButton dragonbreathBtn;
    private javax.swing.JButton extentionBtn;
    private javax.swing.JButton firstAidBaseBtn;
    private javax.swing.JButton flashbangBtn;
    private javax.swing.JButton gasChargeBtn;
    private javax.swing.JButton immunizerBtn;
    private javax.swing.JTextField intSkill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton kinBreakBtn;
    private javax.swing.JButton lifeBtn;
    private javax.swing.JButton mobileBaseBtn;
    private javax.swing.JButton overdoseBtn;
    private javax.swing.JButton proxFuseBtn;
    private javax.swing.JButton pulseBaseBtn;
    private javax.swing.JButton reactiveBtn;
    private javax.swing.JButton rechargerBtn;
    private javax.swing.JButton reconBtn;
    private javax.swing.JButton recoveryBtn;
    private javax.swing.JButton scramblerBtn;
    private javax.swing.JButton seekerBaseBtn;
    private javax.swing.JLabel skillPower;
    private javax.swing.JButton smartCoverBaseBtn;
    private javax.swing.JButton stkyBaseBtn;
    private javax.swing.JButton supporBasetBtn;
    private javax.swing.JButton survivorBtn;
    private javax.swing.JButton tacticalBtn;
    private javax.swing.JButton tacticalScanBtn;
    private javax.swing.JButton trapperBtn;
    private javax.swing.JButton turretBaseBtn;
    private javax.swing.JButton zapperBtn;
    // End of variables declaration//GEN-END:variables
}
